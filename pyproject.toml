[build-system]
requires = ["setuptools>=45", "wheel", "setuptools-scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "agile-dynamic-robot"
version = "0.1.0"
description = "An agile dynamic robot control system with advanced motion planning and sensor integration"
authors = [
    {name = "Robot Developer", email = "developer@example.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["robotics", "motion-control", "path-planning", "computer-vision", "real-time-control"]

dependencies = [
    "numpy>=1.20.0",
    "scipy>=1.7.0",
    "opencv-python>=4.5.0",
    "matplotlib>=3.3.0",
    "transforms3d>=0.3.1",
    "pyserial>=3.5",
    "pyyaml>=5.4.0",
    "scipy>=1.7.0",
    "scikit-learn>=1.0.0",
    "pandas>=1.3.0",
    "asyncio-mqtt>=0.10.0",
    "pybullet>=3.2.0",
    "control>=0.9.0",
    "filterpy>=1.4.5",
    "websockets>=10.0",
]

[project.optional-dependencies]
ros2 = [
    "rclpy",
    "sensor-msgs",
    "geometry-msgs",
    "nav-msgs",
    "tf2-ros",
    "tf2-geometry-msgs",
]
vision = [
    "mediapipe>=0.8.0",
    "pillow>=8.0.0",
    "scikit-image>=0.18.0",
]
simulation = [
    "mujoco>=2.3.0",
    "gym>=0.21.0",
    "stable-baselines3>=1.6.0",
]
dev = [
    "pytest>=6.2.0",
    "pytest-cov>=2.12.0",
    "black>=21.0.0",
    "flake8>=3.9.0",
    "mypy>=0.910",
    "pre-commit>=2.15.0",
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=0.5.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/agile-dynamic-robot"
Documentation = "https://agile-dynamic-robot.readthedocs.io/"
Repository = "https://github.com/yourusername/agile-dynamic-robot"
"Bug Tracker" = "https://github.com/yourusername/agile-dynamic-robot/issues"

[project.scripts]
robot-control = "src.main:main"
robot-sim = "src.simulation.simulator:main"
robot-calibrate = "scripts.calibration:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--strict-markers --strict-config --cov=src --cov-report=html --cov-report=term-missing"
